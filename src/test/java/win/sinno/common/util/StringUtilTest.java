package win.sinno.common.util;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

/**
 * win.sinno.common.util.StringUtilTest
 *
 * @author chenlizhong@qipeng.com
 * @date 2017/10/30
 */
public class StringUtilTest {

  @Test
  public void testJoin() {
    List<String> aa = new ArrayList<String>();
    aa.add("aaa");
    aa.add("bbb");
    System.out.println(StringUtils.join(aa, ","));

    System.out.println(111 % 10);

    System.out.println(Integer.MAX_VALUE);

    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < 10; i++) {
      list.add(i);
    }

    int step = 3;

    for (int i = 0; i < list.size(); ) {
      int b = i;
      i = (i + step) < list.size() ? (i + step) : list.size();

      System.out.println(list.subList(b, i));
    }

  }

  @Test
  public void testS() throws ParseException {
    Date date = DateUtil.format2Date("2017-10-01 00:00:00", "yyyy-MM-dd HH:mm:ss");

    Calendar calendar = Calendar.getInstance();
    calendar.setTime(date);

    Date date2 = DateUtil.format2Date("2017-11-11 00:00:00", "yyyy-MM-dd HH:mm:ss");

//    long now = System.currentTimeMillis();
    while (calendar.getTimeInMillis() < date2.getTime()) {
//      calendar.add(Calendar.MONTH, 1);

      String str = "select '" + DateUtil
          .format(calendar.getTimeInMillis(), "yyyy-MM-dd") + "',";
      str += "-sum(fee) from trade where gmtCreate >= '" + DateUtil
          .format(calendar.getTimeInMillis(), "yyyy-MM-dd HH:mm:ss");

      calendar.add(Calendar.DAY_OF_YEAR, 1);
      str = str
          + "' and gmtCreate <  '" + DateUtil
          .format(calendar.getTimeInMillis(), "yyyy-MM-dd HH:mm:ss")
          + "' and fee < 0 and fee_type = 0 and type <= 1 and seller_id < 888888888888888;";

      System.out.println(str);
    }


  }

  @Test
  public void test1_45() {
    System.out.println(1l << 45);

    Double d = -11d;

    System.out.println("aa " + (-d.longValue()) + " bb");
  }

  @Test
  public void test22() {
    long tag = 48381326524418l;
    System.out.println(tag | (1l << 45));

    System.out.println(tag & (1l << 45));

    System.out.println(tag - (1l << 45));

    System.out.println(tag ^ ((1l << 45)));
  }

  @Test
  public void testBytes() {
    String str = "1234";
    System.out.println(str.getBytes().length);

  }

  @Test
  public void testSize() {
    String ss = "【飞成物流】有四类大件资质、拥有大量可以承接30-600吨车辆，业务以江浙沪出发全国各地，开发物流平台，整合平台回程车资源，能有效做到车货匹配为您降低20%成本。联系人张金龙，手机：13771572666，邮箱:13771572666@163.com 合作飞成您我双赢！回T退订回";
    System.out.println(ss.length());
  }

  @Test
  public void test1() {

//    String uids =
//        "67626023,3037714654,890000000020564470,890000000020564628,890000000020565550,890000000020545098,890000000020564470,"
//            +
//            "890000000020565124,890000000020152831,890000000020329736,890000000020563350";

//    String uids = "152741566,2185621428,3708226217,1013773836,2876349219,930533887,3139731628,3533728331,3347401681,381818478,2251412016,1815476571,342001293,2635214986,46814892,54135718,673940184,635738859,1052162151,40781111,2943141655,732356636,79914166,850565062,841497083,1684096016,2735950624,69181631,2764921318,133174744,363256329";

//    String uids = "1726009561,2088985325";
    String uids = "152741566,2185621428,3708226217,1013773836,2876349219,930533887,3139731628,3533728331,3347401681,381818478,2251412016,1815476571,342001293,2635214986,46814892,54135718,673940184,635738859,1052162151,40781111,2943141655,732356636,79914166,850565062,841497083,1684096016,2735950624,69181631,2764921318,133174744,363256329,1726009561,2088985325,3037714654,1095251662,1710482305,479287798,2090170274,2772080898,1019292692,1055530397,1744921231,20003478,196173223,1773095659,20868741,2612002833,2057428013,71460541,1602099579,43632109,381329993,2354641172,1810832479,2638829335,2974167399,2830047887,729434847,193502143,2643486953,2448802922,913217145,1061690320,355499374,2379788782,101450072,2262500569,2576189099,1808945499,835026114,2219387890,2081058060,2159616682,3299066796,450969373,770622025,303566060,2451193866,2174360244,2113790535,2119678292,258864658,1620343221,2177009988,1710310361,358164451,2968292908,797567822,2179896756,2469562247,2614008534,285940116,2452347015,200906269,734548981,1712484042,3037963981,2098904675,1083554392,1650429497,2482635690,274181551,772376192,820353206,758299113,2457813340,690444147,773592828,379752451,1690425481,1692267959,2794890945,2660143464,1983221995,3309612210,43290044,704298669,2995821815,2075384612,1071824174,2032840798,2217145602,1720131773,108727117,1107209550,2298471098,752440565,474461573,2253486272,1812648039,2527740099,1623755810,1777559618,2098914042,1644258287,2535918111,2512434612,275653624,58273990,129678205,1052501866,67626023,3037714654,43632109,2575609138,1848219836,820353206,2794890945,2591319573,346325872,2179896756,2630993141,303566060,2354641172,3856903788,690444147,1777559618,1690425481,1744921231,2298471098,2509186506,2078067830,3139731628,2826236373,2242676484,73949549,1761926843,3467321997,3347401681,378706185,54135718,769664776,673940184,53422284,3196145601,919094892,24927654,815958301,2185621428,405351325,1013773836";
    String[] us = uids.split(",");

    for (String u : us) {
      System.out.println(
          "curl -d \"op=add&uid=" + u + "\" http://localhost:8106/mc/smsOpFlowControl.jsp");
    }
  }

  @Test
  public void test2() {
    String aaa = "152741566,2185621428,3708226217,1013773836,2876349219,930533887,3139731628,3533728331,3347401681,381818478,2251412016,1815476571,342001293,2635214986,46814892,54135718,673940184,635738859,1052162151,40781111,2943141655,732356636,79914166,850565062,841497083,1684096016,2735950624,69181631,2764921318,133174744,363256329,1726009561,2088985325,3037714654,1095251662,1710482305,479287798,2090170274,2772080898,1019292692,1055530397,1744921231,20003478,196173223,1773095659,20868741,2612002833,2057428013,71460541,1602099579,43632109,381329993,2354641172,1810832479,2638829335,2974167399,2830047887,729434847,193502143,2643486953,2448802922,913217145,1061690320,355499374,2379788782,101450072,2262500569,2576189099,1808945499,835026114,2219387890,2081058060,2159616682,3299066796,450969373,770622025,303566060,2451193866,2174360244,2113790535,2119678292,258864658,1620343221,2177009988,1710310361,358164451,2968292908,797567822,2179896756,2469562247,2614008534,285940116,2452347015,200906269,734548981,1712484042,3037963981,2098904675,1083554392,1650429497,2482635690,274181551,772376192,820353206,758299113,2457813340,690444147,773592828,379752451,1690425481,1692267959,2794890945,2660143464,1983221995,3309612210,43290044,704298669,2995821815,2075384612,1071824174,2032840798,2217145602,1720131773,108727117,1107209550,2298471098,752440565,474461573,2253486272,1812648039,2527740099,1623755810,1777559618,2098914042,1644258287,2535918111,2512434612,275653624,58273990,129678205,1052501866,67626023,3037714654,43632109,2575609138,1848219836,820353206,2794890945,2591319573,346325872,2179896756,2630993141,303566060,2354641172,3856903788,690444147,1777559618,1690425481,1744921231,2298471098,2509186506,2078067830,3139731628,2826236373,2242676484,73949549,1761926843,3467321997,3347401681,378706185,54135718,769664776,673940184,53422284,3196145601,919094892,24927654,815958301,2185621428,405351325,1013773836";
    String[] sa = aaa.split(",");
    System.out.println(sa.length);
  }

  @Test
  public void test00FormatNum() {
    String str = "0023";
    Long count = Long.valueOf(str);
    System.out.println(count);

    System.out.println(1 / 16);
    System.out.println(16 / 16);
    System.out.println(16 % 16);
    System.out.println(17 / 16);
    System.out.println(17 % 16);
    System.out.println(32 / 16);
    System.out.println(32 % 16);
    System.out.println(33 / 16);
    System.out.println(48 / 16);
  }

  @Test
  public void testSum() {
    System.out.println(
        56018 + 98000 + 92000 + 92000 + 90000 + 90000 + 92000 + 92000 + 86000 + 92000 + 90000
            + 92000 + 90000 + 92000 + 91196 + 90000 + 90000 + 90000 + 90000 + 92000 + 94000 + 57504
            + 652 + 2 + 38006 + 88000 + 88000 + 88000 + 90000 + 57866 + 58130 + 6 + 168 + 96002
            + 92000 + 92000 + 92000 + 88000 + 92000 + 84000 + 88000 + 88000 + 87732 + 94 + 30);
  }

  @Test
  public void testa() {
    for (int i = 1; i <= 4; i++) {
      for (int j = 1; j <= 16; j++) {
        int cidx = ((i - 1) * 16 + j);
        String cn;
        if (cidx < 10) {
          cn = "0" + cidx;
        } else {
          cn = "" + cidx;
        }
        System.out.println(
            "curl -d \"rs=" + i
                + "&dbname=wk00" + cn
                + "\" http://127.0.0.1:8107/weike-statistics/test/move");
      }
    }

  }

  @Test
  public void syss() {
    System.out.println(false && true || true);
    System.out.println(true || true && false);
  }

  @Test
  public void ss() {
    String s1124 =
        "3015668248,691568100,1671436227,675969552,4203999101,4002299156,4149660233,1092471199,1996911724,1676162518,3170075115,3015710002,4179713682"
            + ",3469662627,1102768408,41955393,2614154592,752725252,4142216018,863171834,34261453,443545711";

    String s1127 = "3015668248,"
        + "691568100,"
        + "1671436227,"
        + "675969552,"
        + "4203999101,"
        + "4002299156,"
        + "4149660233,"
        + "1092471199,"
        + "1996911724,"
        + "1676162518,"
        + "3170075115,"
        + "3015710002,"
        + "4179713682,"
        + "3469662627,"
        + "1102768408,"
        + "41955393,"
        + "2614154592,"
        + "752725252,"
        + "4142216018,"
        + "863171834,"
        + "34261453,"
        + "443545711";

    String u = "http://121.199.167.226:30005/weike-psdh/odps/uploadSms.json?";
    String[] s24s = s1124.split(",");
    for (String s : s24s) {
      System.out.println(u + "day=20181124&uid=" + s);
    }
    String[] s27s = s1127.split(",");
    for (String s : s27s) {
      System.out.println(u + "day=20181127&uid=" + s);
    }

  }
}
